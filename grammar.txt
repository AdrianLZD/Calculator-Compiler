script -> block

block -> stmt block
       |

stmt -> simstmt ;
      | flowctrl                          -Implementation missing
      | printstmt ;                       -Implementation missing
      | NEWLINE
    
simstmt -> INT ID
         | INT ID = numstmt
         | FLOAT ID
         | FLOAT ID = numstmt
         | STRING ID
         | STRING ID = wordstmt
         | BOOLEAN ID
         | BOOLEAN ID = boolstmt
         | ID = expr                      -Implementation missing

numstmt -> numexpr 
         | ( numexpr )

numexpr -> number
         | numexpr arit numexpr
         | numstmt arit numexpr
         | numexpr arit numstmt
         | - numexpr %prec UMINUS
         | + numexpr %prec UMINUS

number -> INUMBER
        | FNUMBER
        | ID                              -Implementation missing

arit -> +
      | -
      | *
      | /
      | ^

wordstmt -> wordexpr
          | ( numexpr )
          | ( wordexpr )

wordexpr -> WORD
          | ID
          | wordexpr + wordexpr
          | wordstmt + wordstmt
          | wordexpr + wordstmt
          | wordstmt + wordexpr

boolstmt -> boolexpr
          | ( boolexpr )

boolexpr -> TRUE
          | FALSE
          | ID
          | boolcompar
          | ( compar )

boolcompar -> boolstmt complogic boolstmt
            | boolstmt complogic numstmt
            | numstmt complogic boolstmt
            | numstmt complogic numstmt

complogic -> AND
           | OR

compar -> comparexpr
        | boolexpr

comparexpr -> numstmt compall boolstmt
            | boolstmt compall numstmt
            | wordstmt compall wordstmt
            | numstmt compall numstmt
            | comparexpr compall comparexpr
            | boolstmt compall boolstmt
            | wordstmt compall boolstmt
            | boolstmt compall wordstmt

compall -> GTEQUALS
         | LSEQUALS
         | '>'
         | '<'
         | compmin

compmin -> EQUALS
         | NOTEQUALS
          

flowctrl -> ifblock                 
          | while compar { block }        -Implementation missing
          | for ( ; ; ){ block }          -Implementation missing

ifblock -> IF ( boolstmt ) { block }
         | IF ( numstmt ) { block }
         | IF ( wordstmt ) { block } 
         | ifblock ELSE { block }

printstmt -> ( expr )                     -Implementation missing
